<% layout('./layout/page'); -%>
<% block('title', 'Chat'); -%>
<p class="lead">Chat!</p>
<p>Hello, <%=user.get('username')%></p>

<script src="/socket.io/socket.io.js"></script>
<div id="room">
    <ul id="info"></ul>
    <ul id="messages"></ul>
    <form>
        <input disabled class="form-control" autocomplete="off" autofocus placeholder="Message...">
    </form>
</div>
<script>
    const socket = io({
        reconnectionDelay: 500,
        reconnectionDelayMax: 500,
        transports: ['websocket']
    });

    const form = $('#room form');
    const messages = $('#messages');
    const info = $('#info');
    const input = $('#room input');

    socket
        .on('message', (username, text) => printMessage(messages, `${username}: ${text}`))
        .on('leave', username => printMessage(info, `${username} has left`))
        .on('join', username => printMessage(info, `${username} has joined`))
        .on('connect', function() {
            printMessage(info, 'CONNECTION ESTABLISHED');
            form.on('submit', sendMessage);
            input.prop('disabled', false);
        })
        .on('disconnect', function() {
            printMessage(info, 'CONNECTION LOST');
            form.off('submit', sendMessage);
            input.prop('disabled', true);
        })
        .on('logout', function() {
            location.href = '/';
        })
        .on('error', function(reason) {
            if(reason === 'handshake unauthorized') {
                printMessage(info, 'You have left the chat!');
            }
        });

    function sendMessage() {
        const text = input.val();
        socket.emit('message', text);
        printMessage(messages, `Me: ${text}`);
        input.val('');
        return false;
    }

    function printMessage(target, text) {
        $('<li>', { text: text }).appendTo(target);
    }

</script>
